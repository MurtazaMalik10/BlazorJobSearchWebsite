@page "/categories"
@inject CategoryDAL CategoryDAL
@using Entities
@using DAL

<h3>Categories</h3>

<!-- Display existing categories -->
@if (categories != null && categories.Any())
{
    <ul>
        @foreach (var category in categories)
        {
            <li>
                @category.Category
                <!-- Add buttons for updating and deleting each category -->
                <button @onclick="() => EditCategory(category)">Edit</button>
                <button @onclick="() => DeleteCategory(category.Id)">Delete</button>
            </li>
        }
    </ul>
}
else
{
    <p>No categories found.</p>
}

<!-- Form for adding or updating categories -->
<div>
    <h4>Add Category</h4>
    <input type="text" @bind="newCategory.Category" />
    <button @onclick="SaveCategory">Save</button>
</div>

@code {
    List<EntCategory> categories;
    EntCategory newCategory = new EntCategory();

    protected override void OnInitialized()
    {
        // Fetch existing categories when the component is initialized
        RefreshCategories();
    }

    private void RefreshCategories()
    {
        categories = CategoryDAL.GetCategory();
    }

    private void SaveCategory()
    {
        if (string.IsNullOrWhiteSpace(newCategory.Category))
        {
            // Implement validation for empty category names
            return;
        }

        CategoryDAL.SaveCategory(newCategory);
        RefreshCategories();
        newCategory = new EntCategory(); // Clear the input after adding
    }

    private void DeleteCategory(int categoryId)
    {
        CategoryDAL.DeleteCategory(categoryId);
        RefreshCategories();
    }

    private void EditCategory(EntCategory category)
    {
        // Add logic to handle editing category
    }
}
