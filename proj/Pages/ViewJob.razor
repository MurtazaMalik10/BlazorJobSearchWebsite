@page "/viewjob/{JobId:int}"
@using Entities
@using DAL
@inject NavigationManager NavigationManager

<style>
    /* Custom styles for View Job page */
    .job-details-container {
        margin-top: 50px;
    }

    .job-details {
        font-family: 'Arial', sans-serif;
        color: #333;
    }

        .job-details h3 {
            font-size: 2.5rem;
            font-weight: bold;
            color: #0066b2;
            margin-bottom: 20px;
        }

        .job-details p {
            font-size: 1.2rem; /* Increased text size */
            line-height: 1.6;
            margin-bottom: 20px;
        }

    .thumbnail-column {
        text-align: center;
    }

        .thumbnail-column img {
            max-width: 800px;
            height: 700px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }

            .thumbnail-column img:hover {
                transform: scale(1.05);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            }

    /* Custom button style */
    .custom-button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 1.2rem;
        font-weight: bold;
        color: #fff;
        background-color: green;
        border: none;
        border-radius: 5px;
        transition: background-color 0.3s ease-in-out;
    }

        .custom-button:hover {
            background-color: black;
        }
</style>

<div class="container job-details-container">
    @if (job != null)
    {
        <div class="row">
            <div class="col-md-6 job-details">
                <h3>Job Title: @job.JobTitle</h3>
                <h3 class="text-success font-weight-bold">Description:</h3>
                <p>@job.Description</p>
                <h3 class="text-black font-weight-bold">Salary:</h3> <!-- Display Salary -->
                <p>@job.Salary</p>
                <h3 class="text-black font-weight-bold">Type:</h3> <!-- Display Type -->
                <p>@job.Type</p>
                <p class="text-muted">@CalculateTimeAgo(job.TimeUploaded)</p>
                <button class="custom-button" @onclick="ApplyNow">Apply Now</button>
            </div>
            <div class="col-md-6 thumbnail-column">
                @if (!string.IsNullOrEmpty(job.Thumbnail))
                {
                    <img src="@($"data:image/png;base64,{job.Thumbnail}")" alt="Thumbnail" class="img-fluid rounded">
                }
            </div>
        </div>
    }
    else
    {
        <p>No job details found.</p>
    }
</div>

@code {
    EntJobs job;

    [Parameter]
    public int JobId { get; set; }

    protected override void OnInitialized()
    {
        // Fetch job details based on the JobId from the route parameter
        job = DALJobs.GetJobById(JobId);
    }

    private void ApplyNow()
    {
        // Implement your logic for applying to the job
        // For example, redirect to an application form or process
        // Here's a simple navigation to a hypothetical application page:
        NavigationManager.NavigateTo($"/apply/{JobId}");
    }

    string CalculateTimeAgo(DateTime? timeUploaded)
    {
        if (timeUploaded.HasValue)
        {
            DateTime uploadTime = timeUploaded.Value;
            TimeSpan timeDifference = DateTime.Now - uploadTime;

            if (timeDifference.TotalSeconds < 60)
            {
                return "Posted just now";
            }
            else if (timeDifference.TotalMinutes < 60)
            {
                return $"Posted {(int)timeDifference.TotalMinutes} minute{(timeDifference.TotalMinutes != 1 ? "s" : "")} ago";
            }
            else if (timeDifference.TotalHours < 24)
            {
                return $"Posted {(int)timeDifference.TotalHours} hour{(timeDifference.TotalHours != 1 ? "s" : "")} ago";
            }
            else
            {
                return $"Posted {(int)timeDifference.TotalDays} day{(timeDifference.TotalDays != 1 ? "s" : "")} ago";
            }
        }
        else
        {
            return "Unknown posting time";
        }
    }
}
