@page "/joblistings"
@inject NavigationManager NavigationManager

@using Entities
@using DAL

<h3 class="mb-4 text-center">Job Listings</h3>

<div class="row row-cols-1 row-cols-md-2 g-4">
    @if (jobs != null && jobs.Any())
    {
        @foreach (var job in jobs)
        {
            <div class="col mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@job.JobTitle</h5>
                        <h6 class="card-subtitle mb-2 text-muted">Job ID: @job.JobId</h6>
                        <p class="card-text">@job.Description</p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-primary me-2" @onclick="@(() => ViewJobDetails(job.JobId))">View Job</button>
                            <button class="btn btn-danger" @onclick="@(() => DeleteJob(job.JobId))">Delete Job</button>
                        </div>
                        <!-- Additional job details can be added here -->
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col">
            <p class="text-center">No jobs found.</p>
        </div>
    }
</div>

@code {
    List<EntJobs> jobs;

    protected override void OnInitialized()
    {
        // Fetch all jobs from the database
        jobs = DALJobs.ShowJob();
    }

    private void ViewJobDetails(int jobId)
    {
        // Redirect to ViewJob component with jobId in the URL
        NavigationManager.NavigateTo($"/viewjob/{jobId}");
    }

    private void DeleteJob(int jobId)
    {
        // Implement logic to delete the job with jobId using DAL
        // For example: DALJobs.DeleteJob(jobId);
        // After deletion, you may want to refresh the job list
        jobs = DALJobs.ShowJob();
    }
}
