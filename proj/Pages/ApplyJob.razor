@page "/apply/{JobId:int}"
@using Microsoft.AspNetCore.Components.Forms
@using BlazorInputFile
@using DAL
@using Entities
@attribute [Authorize(Roles = "Company")]
@inject NavigationManager NavigationManager
@inject JobApplicationDAL JobApplicationDAL

<div class="container">
    <h3 class="mt-4 mb-3 text-center">Apply for Job</h3>
    <form>
        <div class="mb-3">
            <label for="fullName" class="form-label">Full Name</label>
            <input type="text" class="form-control" id="fullName" @bind="jobApplication.FullName" />
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" @bind="jobApplication.Email" />
        </div>
        <div class="mb-3">
            <label for="contactNumber" class="form-label">Contact Number</label>
            <input type="text" class="form-control" id="contactNumber" @bind="jobApplication.ContactNumber" />
        </div>
        <label for="cvInput" class="form-label">CV:</label>
        <div class="form-group">
            <label for="fileInput" class="form-label">Select Image!:</label>
            <div class="input-group">
                <div class="custom-file">
                    <Microsoft.AspNetCore.Components.Forms.InputFile type="file" id="fileInput" accept="image/*" OnChange="HandleFileChange" class="custom-file-input" aria-describedby="inputGroupFileAddon" />
                    <label class="custom-file-label" for="fileInput">Choose file</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <img class="writeImg" src="@($"data:image/png;base64,{base64String}")" alt="" />
        </div>
        <div class="text-center">
            <button class="btn btn-primary" @onclick="SubmitApplication">Submit Application</button>
        </div>
    </form>
</div>

@code {
    private JobApplication jobApplication = new JobApplication();
    private string base64String; // Variable to store CV file in base64 format

    [Parameter]
    public int JobId { get; set; }

    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file != null)
        {
            using (var memoryStream = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(memoryStream);
                base64String = Convert.ToBase64String(memoryStream.ToArray());
                jobApplication.CVFile = base64String; // Assign base64 string to job's CVFile property
            }
        }
    }

    private async Task SubmitApplication()
    {
        if (!string.IsNullOrWhiteSpace(jobApplication.FullName) &&
            !string.IsNullOrWhiteSpace(jobApplication.Email) &&
            !string.IsNullOrWhiteSpace(jobApplication.ContactNumber) &&
            !string.IsNullOrWhiteSpace(jobApplication.CVFile)) // Checking CV file content
        {
            // Ensure other fields are filled as needed

            // Ensure that the flow reaches this point
            Console.WriteLine("Before submitting application to DAL");

            // Call DAL method to save job application
            JobApplicationDAL.SubmitJobApplication(jobApplication);

            Console.WriteLine("After submitting application to DAL");

            // Navigate to confirmation page with query parameters
            NavigationManager.NavigateTo("/confirmation?JobId=" + jobApplication.JobId.ToString());
        }
        else
        {
            // Handle validation or display an error message
        }
    }
}
}

